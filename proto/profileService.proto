syntax = "proto3";

package grpcTalk;

// Create something useful in context of ChiPy Mentorship Program

service ProfileService {

    // Create a profile = client unary, server streaming
    rpc CreateUserProfile (CreateUserProfileRequest) returns (CreateUserProfileResponse);

    // Create many profiles = bidirectional stream
    rpc CreateUserProfiles (stream CreateUserProfilesRequest) returns (stream CreateUserProfilesResponse);

    // Get the mentee or mentor details = client unary, server unary
    rpc GetUserProfile (GetUserProfileRequest) returns (GetUserProfileResponse);

    // Get all profiles = client unary, server streaming
    rpc GetAllProfiles (GetAllProfilesRequest) returns (stream GetAllProfilesResponse);
}


message User {
    // REQUIRED
    string firstName = 1;
    // REQUIRED
    string lastName = 2;
    // REQUIRED
    Term term = 3;
}


message Term {
    string season = 1;
    int32 year = 2;
} 


message Profile {
    // REQUIRED
    string profile = 1;
}


message CreateUserProfileRequest {
    User user = 1;
    Profile profile = 2;
}

message CreateUserProfileResponse {
    string status = 1;
}


message CreateUserProfilesRequest {
    repeated CreateUserProfileRequest user_profiles = 1;
}

message CreateUserProfilesResponse {
    repeated CreateUserProfileResponse statuses = 1;
}


message GetUserProfileRequest {
    User user = 1;
}

message GetUserProfileResponse {
    User user = 1;
    Profile profile = 2;
}


message GetAllProfilesRequest {
    int32 numProfiles = 1;
}

message GetAllProfilesResponse {
    repeated GetUserProfileResponse profiles = 1;
}

